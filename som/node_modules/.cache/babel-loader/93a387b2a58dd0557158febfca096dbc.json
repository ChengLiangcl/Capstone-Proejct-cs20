{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pythoncodes\\\\New\\\\som\\\\src\\\\components\\\\MetadataForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { Button, Row, Col, Label, Container } from 'reactstrap';\nimport { Control, LocalForm, Form, Errors, actions } from 'react-redux-form';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { IconButton, Modal } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MetadataForm(props) {\n  _s();\n\n  const [tags, setTags] = useState([]);\n  const [attr, setAttr] = useState(1);\n\n  const handleSubmit = values => {\n    const attrInfo = integrateAttrInfo(attr, values);\n    const fixedValue = fixEmptyForm(values, tags, attrInfo);\n    console.log('Current State is: ' + JSON.stringify(fixedValue));\n    alert(`Current State is:  ${JSON.stringify(fixedValue)}`); // 'props.submitMetadata' is from Redux actionCreators, which is used to post the metadata to the backend server\n\n    props.submitMetadata(fixedValue);\n  };\n\n  const TagInputs = tags => {\n    const {\n      model,\n      dispatch\n    } = props;\n    return /*#__PURE__*/_jsxDEV(ReactTagInput, {\n      tags: tags,\n      onChange: newTags => setTags(newTags),\n      onCustomChange: e => dispatch(actions.change(model, e))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  };\n\n  const handleAddClick = () => {\n    setAttr(attr + 1);\n  };\n\n  const handleRemoveClick = () => {\n    if (attr > 1) {\n      setAttr(attr - 1);\n    } else {\n      setAttr(1);\n    }\n  };\n\n  const AttrRow = (attrNum, showButtons) => {\n    if (showButtons) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          md: 2,\n          className: \"attribute\",\n          htmlFor: \"attrInfo\",\n          children: `Attribute${attrNum}: `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrName${attrNum}`,\n            id: `.attrName${attrNum}`,\n            name: \"attrName\",\n            placeholder: \"attribute name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrDescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrDescription${attrNum}`,\n            id: `.attrDescription${attrNum}`,\n            name: \"attrInfo\",\n            placeholder: \"description\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleAddClick,\n              \"aria-label\": \"add an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleRemoveClick,\n              \"aria-label\": \"remove an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          md: 2,\n          className: \"attribute\",\n          htmlFor: \"attrInfo\",\n          children: `Attribute${attrNum}: `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrName${attrNum}`,\n            id: `.attrName${attrNum}`,\n            name: \"attrName\",\n            placeholder: \"attribute name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          className: \"attribute\",\n          htmlFor: \"attrDescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"align-item-center\",\n          children: /*#__PURE__*/_jsxDEV(Control.text, {\n            md: 1,\n            model: `.attrDescription${attrNum}`,\n            id: `.attrDescription${attrNum}`,\n            name: \"attrInfo\",\n            placeholder: \"description\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"nodisplay\",\n              \"aria-label\": \"add an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"nodisplay\",\n              \"aria-label\": \"remove an attribute\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const AttrForm = num => {\n    let arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(AttrRow(i + 1, false));\n    }\n\n    return arr;\n  }; // this function is for integrate all attribution infos into an array\n  // so that it can be send into the backend server as a whole\n\n\n  const integrateAttrInfo = (attrNum, values) => {\n    let attrInfo = [];\n\n    for (let i = 0; i < attrNum; i++) {\n      let attrIndex = `Attribute${i + 1}`;\n      attrIndex = {\n        // to identify if the attrName exists in the values (meaning if a user input words into it)\n        // if not, then adding \"\" to attrName; if the user inputted, then keep the inputted value\n        attrName: values[`attrName${i + 1}`] == null ? \"\" : values[`attrName${i + 1}`],\n        attrDescription: values[`attrDescription${i + 1}`] == null ? \"\" : values[`attrDescription${i + 1}`]\n      };\n      attrInfo.push(attrIndex);\n      console.log(\"after push \" + i);\n      console.log(attrInfo);\n    }\n\n    return attrInfo;\n  }; // this function is to fill up \"\" while a user input nothing in a form filed.\n\n\n  const fixEmptyForm = (values, tags, attrInfo) => {\n    let inputForm = [\"FileName\", \"UserName\", \"BriefInfo\", \"Description\", \"Source\", \"Number_of_Instance\", \"Number_of_Attribute\", \"Label\", \"Keywords\", \"AttrInfo\"];\n    let fixedForm = [];\n    let fixedValue = {};\n\n    for (let eachForm of inputForm) {\n      switch (eachForm) {\n        case \"FileName\":\n          fixedValue[eachForm] = props.dataset.FileName;\n          break;\n\n        case \"UserName\":\n          fixedValue[eachForm] = props.dataset.UserName;\n          break;\n\n        case \"Keywords\":\n          fixedValue[eachForm] = tags;\n          break;\n\n        case \"AttrInfo\":\n          fixedValue[eachForm] = attrInfo;\n          break;\n\n        case \"Label\":\n          fixedValue[eachForm] = values[eachForm] == null ? \"Unknown\" : values[eachForm];\n          break;\n\n        default:\n          fixedValue[eachForm] = values[eachForm] == null ? \"\" : values[eachForm];\n      }\n    }\n\n    fixedForm.push(fixedValue);\n    return fixedForm;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"metadata-info\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"metadata-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Data Description - \", props.dataset.FileName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LocalForm, {\n        onSubmit: values => handleSubmit(values),\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"BriefInfo\",\n              md: \"2\",\n              children: \"Brief descripton:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".BriefInfo\",\n                id: \"BriefInfo\",\n                name: \"BriefInfo\",\n                placeholder: \"Please input a brief description for the dataset\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"Description\",\n            children: \"Dataset description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Control.textarea, {\n              model: \".Description\",\n              id: \"Description\",\n              name: \"Description\",\n              row: \"6\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"Source\",\n              md: 1,\n              children: \"Source:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".Source\",\n                id: \"Source\",\n                name: \"Source\",\n                placeholder: \"Please input your source\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"Number_of_Instance\",\n              md: 10,\n              children: \"Number of instances:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Control.input, {\n                model: \".Number_of_Instance\",\n                id: \"Number_of_Instance\",\n                name: \"Number_of_Instance\",\n                className: \"form-control\",\n                min: \"0\",\n                type: \"number\",\n                step: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"Number_of_Attribute\",\n              md: 10,\n              children: \"Number of attributes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Control.input, {\n                model: \".Number_of_Attribute\",\n                id: \"Number_of_Attribute\",\n                name: \"Number_of_Attribute\",\n                className: \"form-control\",\n                min: \"0\",\n                type: \"number\",\n                step: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              md: 4,\n              children: \"Whether the dataset containes labels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Control.select, {\n                model: \".Label\",\n                id: \"Label\",\n                name: \"Label\",\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Unknown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"keywords\",\n              md: 2,\n              children: \"Key words:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(ReactTagInput, {\n                tags: tags,\n                onChange: newTags => setTags(newTags)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Control, {\n                model: \".keywords\",\n                id: \"keywords\",\n                name: \"keywords\",\n                value: \"test\",\n                className: \"form-control nodisplay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              backgroundColor: \"aliceblue\",\n              width: \"100%\"\n            },\n            children: \"Attribute Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [AttrForm(attr - 1), AttrRow(attr, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-button col-md-4 align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            style: {\n              backgroundColor: \"#378CC6\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MetadataForm, \"wm5eg6FJJ7Po0HtzjFA89vqctyQ=\");\n\n_c = MetadataForm;\nexport default MetadataForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetadataForm\");","map":{"version":3,"sources":["D:/Pythoncodes/New/som/src/components/MetadataForm.js"],"names":["React","useRef","useState","useEffect","useLayoutEffect","Button","Row","Col","Label","Container","Control","LocalForm","Form","Errors","actions","ReactTagInput","IconButton","Modal","AddIcon","RemoveIcon","MetadataForm","props","tags","setTags","attr","setAttr","handleSubmit","values","attrInfo","integrateAttrInfo","fixedValue","fixEmptyForm","console","log","JSON","stringify","alert","submitMetadata","TagInputs","model","dispatch","newTags","e","change","handleAddClick","handleRemoveClick","AttrRow","attrNum","showButtons","AttrForm","num","arr","i","push","attrIndex","attrName","attrDescription","inputForm","fixedForm","eachForm","dataset","FileName","UserName","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport { Button, Row, Col, Label, Container } from 'reactstrap';\nimport { Control, LocalForm, Form, Errors, actions } from 'react-redux-form';\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport { IconButton, Modal } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport \"@pathofdev/react-tag-input/build/index.css\";\n\nfunction MetadataForm(props) {\n    const [tags, setTags] = useState([]);\n    const [attr, setAttr] = useState(1);\n\n    const handleSubmit = (values) => {\n        \n        const attrInfo = integrateAttrInfo(attr, values);\n        const fixedValue = fixEmptyForm(values, tags, attrInfo);\n        console.log('Current State is: ' + JSON.stringify(fixedValue));\n\n        alert(`Current State is:  ${JSON.stringify(fixedValue)}`);\n        // 'props.submitMetadata' is from Redux actionCreators, which is used to post the metadata to the backend server\n        props.submitMetadata(fixedValue);\n    };\n\n    const TagInputs = (tags) => {\n        const { model, dispatch } = props;\n        return <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} onCustomChange={e => dispatch(actions.change(model, e))} />\n    };\n\n    const handleAddClick = () => {\n        setAttr(attr + 1);\n    };\n\n    const handleRemoveClick = () => {\n        if (attr > 1) {\n            setAttr(attr - 1);\n        } else {\n            setAttr(1);\n        }\n    };\n\n    const AttrRow = (attrNum, showButtons) => {\n        if (showButtons) {\n            return (\n                <Row>\n                    <Label md={2} className=\"attribute\" htmlFor=\"attrInfo\">{`Attribute${attrNum}: `}</Label>\n                    <Label className=\"attribute\" htmlFor=\"attrName\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrName${attrNum}`} id={`.attrName${attrNum}`} name=\"attrName\" placeholder=\"attribute name\" className=\"form-control\" />\n                    </Col>\n\n                    <Label className=\"attribute\" htmlFor=\"attrDescription\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrDescription${attrNum}`} id={`.attrDescription${attrNum}`} name=\"attrInfo\" placeholder=\"description\" className=\"form-control\" />\n                    </Col>\n\n                    <Col>\n                        <Row>\n                            <IconButton onClick={handleAddClick} aria-label=\"add an attribute\" component=\"span\">\n                                <AddIcon />\n                            </IconButton>\n                            <IconButton onClick={handleRemoveClick} aria-label=\"remove an attribute\" component=\"span\">\n                                <RemoveIcon />\n                            </IconButton>\n                        </Row>\n                    </Col>\n                </Row>\n            );\n        }\n        else {\n            return (\n                <Row>\n                    <Label md={2} className=\"attribute\" htmlFor=\"attrInfo\">{`Attribute${attrNum}: `}</Label>\n                    <Label className=\"attribute\" htmlFor=\"attrName\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrName${attrNum}`} id={`.attrName${attrNum}`} name=\"attrName\" placeholder=\"attribute name\" className=\"form-control\" />\n                    </Col>\n\n                    <Label className=\"attribute\" htmlFor=\"attrDescription\"></Label>\n                    <Col className=\"align-item-center\">\n                        <Control.text md={1} model={`.attrDescription${attrNum}`} id={`.attrDescription${attrNum}`} name=\"attrInfo\" placeholder=\"description\" className=\"form-control\" />\n                    </Col>\n\n                    <Col>\n                        <Row>\n                            <IconButton className=\"nodisplay\" aria-label=\"add an attribute\" component=\"span\">\n                                <AddIcon />\n                            </IconButton>\n                            <IconButton className=\"nodisplay\" aria-label=\"remove an attribute\" component=\"span\">\n                                <RemoveIcon />\n                            </IconButton>\n                        </Row>\n                    </Col>\n                </Row>\n            );\n        }\n\n    };\n\n    const AttrForm = (num) => {\n        let arr = [];\n        for (let i = 0; i < num; i++) {\n            arr.push(AttrRow(i + 1, false));\n        }\n        return arr;\n    };\n\n    // this function is for integrate all attribution infos into an array\n    // so that it can be send into the backend server as a whole\n    const integrateAttrInfo = (attrNum, values) => {\n        let attrInfo = [];\n\n        for(let i = 0; i < attrNum; i++){\n            let attrIndex = `Attribute${i+1}`;\n\n            attrIndex = {\n                // to identify if the attrName exists in the values (meaning if a user input words into it)\n                // if not, then adding \"\" to attrName; if the user inputted, then keep the inputted value\n                attrName: values[`attrName${i+1}`] == null ? \"\" : values[`attrName${i+1}`],\n                attrDescription: values[`attrDescription${i+1}`] == null ? \"\" : values[`attrDescription${i+1}`]\n            };\n\n            attrInfo.push(attrIndex);\n            console.log(\"after push \" + i);\n            console.log(attrInfo);\n        }\n        return attrInfo;\n    };\n\n    // this function is to fill up \"\" while a user input nothing in a form filed.\n    const fixEmptyForm = (values, tags, attrInfo) => {\n        let inputForm = [\"FileName\", \"UserName\", \"BriefInfo\", \"Description\", \"Source\", \"Number_of_Instance\", \"Number_of_Attribute\", \"Label\", \"Keywords\", \"AttrInfo\"]\n        let fixedForm = [];\n        let fixedValue = {};\n        \n        for (let eachForm of inputForm){\n            switch(eachForm){\n                case \"FileName\":\n                    fixedValue[eachForm] = props.dataset.FileName;\n                    break;\n                case \"UserName\":\n                    fixedValue[eachForm] = props.dataset.UserName;\n                    break;\n                case \"Keywords\":\n                    fixedValue[eachForm] = tags;\n                    break;\n                case \"AttrInfo\":\n                    fixedValue[eachForm] = attrInfo;\n                    break;\n                case \"Label\":\n                    fixedValue[eachForm] = values[eachForm] == null ? \"Unknown\" : values[eachForm];\n                    break;\n                default:\n                    fixedValue[eachForm] = values[eachForm] == null ? \"\" : values[eachForm];\n            }\n        }\n        fixedForm.push(fixedValue);\n\n        return fixedForm;\n    };\n\n    return (\n        <Container>\n            <Col className=\"metadata-info\">\n                <Row className=\"metadata-title\">\n                    <div className=\"title col-md-8\">\n                        <h4>Data Description - {props.dataset.FileName}</h4>\n                    </div>\n                </Row>\n                <Row>\n                    \n                </Row>\n\n\n                <LocalForm onSubmit={(values) => handleSubmit(values)}>\n                    <Col className=\"form-group\">\n                        <Row>\n                            <Label htmlFor=\"BriefInfo\" md=\"2\">Brief descripton:</Label>\n                            <Col>\n                                <Control.text model=\".BriefInfo\" id=\"BriefInfo\" name=\"BriefInfo\"\n                                    placeholder=\"Please input a brief description for the dataset\"\n                                    className=\"form-control\" />\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col className=\"form-group\">\n                        <Label htmlFor=\"Description\">Dataset description:</Label>\n                        <Col md={10}>\n                            <Control.textarea model=\".Description\" id=\"Description\" name=\"Description\"\n                                row=\"6\" className=\"form-control\" />\n                        </Col>\n                    </Col>\n\n                    <Col className=\"form-group\">\n                        <Row>\n                            <Label htmlFor=\"Source\" md={1}>Source:</Label>\n                            <Col>\n                                <Control.text model=\".Source\" id=\"Source\" name=\"Source\"\n                                    placeholder=\"Please input your source\"\n                                    className=\"form-control\" />\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Row className=\"form-group\">\n                        <Col md={5}>\n                            <Label htmlFor=\"Number_of_Instance\" md={10}>Number of instances:</Label>\n                            <Col md={4}>\n                                <Control.input model=\".Number_of_Instance\" id=\"Number_of_Instance\" name=\"Number_of_Instance\"\n                                    className=\"form-control\"\n                                    min=\"0\" type=\"number\" step=\"1\" />\n                            </Col>\n                        </Col>\n\n                        <Col md={5}>\n                            <Label htmlFor=\"Number_of_Attribute\" md={10}>Number of attributes:</Label>\n                            <Col md={4}>\n                                <Control.input model=\".Number_of_Attribute\" id=\"Number_of_Attribute\" name=\"Number_of_Attribute\"\n                                    className=\"form-control\"\n                                    min=\"0\" type=\"number\" step=\"1\" />\n                            </Col>\n                        </Col>\n                    </Row>\n\n                    <Col className=\"form-group\">\n                        <Row>\n                            <Label md={4}>Whether the dataset containes labels:</Label>\n                            <Col md={2}>\n                                <Control.select model=\".Label\" id=\"Label\" name=\"Label\"\n                                    className=\"form-control\">\n                                    <option>Unknown</option>\n                                    <option>Yes</option>\n                                    <option>No</option>\n                                </Control.select>\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col className=\"form-group\">\n                        <Row>\n                            <Label htmlFor=\"keywords\" md={2}>Key words:</Label>\n                            <Col>\n                                <ReactTagInput tags={tags} onChange={(newTags) => setTags(newTags)} />\n                                <Control model=\".keywords\" id=\"keywords\" name=\"keywords\"\n                                    value=\"test\" className=\"form-control nodisplay\" />\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <Col className=\"form-group\"> {/**for loop */}\n                        <Label style={{ backgroundColor: \"aliceblue\", width: \"100%\" }}>Attribute Information:</Label>\n                        <Col>\n                            {AttrForm(attr - 1)}\n                            {AttrRow(attr, true)}\n                        </Col>\n                    </Col>\n\n                    <div className=\"submit-button col-md-4 align-items-center\">\n                        <Button type=\"submit\" style={{ backgroundColor: \"#378CC6\" }}>Submit</Button>\n                    </div>\n\n                </LocalForm>\n\n\n            </Col>\n        </Container>\n    );\n}\n\nexport default MetadataForm;"]},"metadata":{},"sourceType":"module"}