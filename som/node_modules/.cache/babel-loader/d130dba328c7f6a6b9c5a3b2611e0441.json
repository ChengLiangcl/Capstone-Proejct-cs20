{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pythoncodes\\\\New3\\\\som\\\\src\\\\components\\\\DatabaseComponent.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport { IconButton, Modal, TableRow } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport { Link } from 'react-router-dom';\nimport DatasetUpload from './DatasetUploadComponent';\nimport DeleteOneDataset from './DeleteOneDataset';\nimport { Loading } from './LoadingComponent';\nimport MetadataForm from './MetadataForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Database extends Component {\n  constructor(props) {\n    super(props);\n  } // to create a flexible table head, where the number of columns depends on the attributes in the datafile.\n  // dataset: array. JSON data stored inside.\n\n\n  tableHead(datasets) {\n    if (datasets !== undefined) {\n      return /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The table for storing uploaded datasets does not exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  } //TODO: may change if the design of the database is changed\n\n\n  tableBody(datasets) {\n    // when there is no uploaded dataset in the database\n    if (datasets.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    } else {\n      // where are dataset stored in the database\n      return /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: datasets.map((eachDataset, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Object.values(eachDataset).slice(1, 4).map(eachValue => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: eachValue\n          }, Object.values(eachValue)[0], false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 86\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.operateDataset(true, eachDataset.FileName)\n          }, \"operateEachDataset\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n  } //showOperate: bool. the delete button and the create button will be disable\n\n\n  operateDataset(showOperate, fileName) {\n    /** \n    if (icons === \"add only\") {\n        return (\n            <Container>\n                <Row>\n                    <DatasetUpload addDataset={this.props.datasetfile} />\n                </Row>\n            </Container>\n        );\n    }*/\n    if (showOperate) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(DeleteOneDataset, {\n            deleteDataset: this.props.deleteDataset,\n            deletedFileName: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/metadata-form/${fileName}`,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"create matadata\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/mydatabase/${fileName}`,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"detailed data\",\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(TableChartIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderDatasetTable(datasets, isLoading, errMess) {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    } else if (errMess) {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: errMess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Table, {\n        hover: true,\n        children: [this.tableHead(datasets), this.tableBody(datasets)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            size: 7\n          },\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            style: {\n              width: '6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Search similar datasets here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n              addonType: \"append\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  backgroundColor: '#378CC6'\n                },\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(DatasetUpload, {\n          uploadDataset: this.props.uploadDataset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"database\",\n        children: this.renderDatasetTable(this.props.datasetFiles, this.props.isLoading, this.props.errMess)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Database;","map":{"version":3,"sources":["D:/Pythoncodes/New3/som/src/components/DatabaseComponent.js"],"names":["React","Component","InputGroup","InputGroupText","InputGroupAddon","Input","Container","Row","Col","Button","Table","IconButton","Modal","TableRow","DeleteIcon","CreateIcon","TableChartIcon","Link","DatasetUpload","DeleteOneDataset","Loading","MetadataForm","Database","constructor","props","tableHead","datasets","undefined","tableBody","length","map","eachDataset","index","Object","values","slice","eachValue","operateDataset","FileName","showOperate","fileName","deleteDataset","renderDatasetTable","isLoading","errMess","render","size","width","backgroundColor","uploadDataset","datasetFiles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport { IconButton, Modal, TableRow } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport { Link } from 'react-router-dom';\n\nimport DatasetUpload from './DatasetUploadComponent';\nimport DeleteOneDataset from './DeleteOneDataset';\nimport { Loading } from './LoadingComponent';\nimport MetadataForm from './MetadataForm';\n\nclass Database extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // to create a flexible table head, where the number of columns depends on the attributes in the datafile.\n    // dataset: array. JSON data stored inside.\n    tableHead(datasets) {\n        if (datasets !== undefined) {\n            return (\n                <thead>\n                    <tr>\n                        <th>File name</th>\n                        <th>Description</th>\n                        <th>Size</th>\n                        <th>Operation</th>\n                    </tr>\n                </thead>\n            );\n        }\n\n        return (\n            <div>The table for storing uploaded datasets does not exist</div>\n        );\n    }\n\n    //TODO: may change if the design of the database is changed\n    tableBody(datasets) {\n        // when there is no uploaded dataset in the database\n        if (datasets.length === 0) {\n            return (\n                <tbody />\n            );\n        }\n        else { // where are dataset stored in the database\n            return (\n                <tbody>\n                    {datasets.map((eachDataset, index) =>\n                        <tr key={index}>\n                            {Object.values(eachDataset).slice(1, 4).map(eachValue => <td key={Object.values(eachValue)[0]}>{eachValue}</td>)}\n                            <td key={\"operateEachDataset\"}>{this.operateDataset(true, eachDataset.FileName)}</td>\n                        </tr>\n                    )}\n                </tbody>\n            );\n        }\n\n    }\n\n    //showOperate: bool. the delete button and the create button will be disable\n    operateDataset(showOperate, fileName) {\n        /** \n        if (icons === \"add only\") {\n            return (\n                <Container>\n                    <Row>\n                        <DatasetUpload addDataset={this.props.datasetfile} />\n                    </Row>\n                </Container>\n            );\n        }*/\n        if (showOperate) {\n            return (\n                <Container>\n                    <Row>\n                        <DeleteOneDataset deleteDataset={this.props.deleteDataset}\n                            deletedFileName={fileName} />\n\n                        <Link to={`/metadata-form/${fileName}`}>\n                            <IconButton aria-label=\"create matadata\" component=\"span\">\n                                <CreateIcon />\n                            </IconButton>\n                        </Link>\n\n                        <Link to={`/mydatabase/${fileName}`}>\n                            <IconButton aria-label=\"detailed data\" component=\"span\">\n                                <TableChartIcon />\n                            </IconButton>\n                        </Link>\n                    </Row>\n                </Container>\n            );\n        }\n    }\n\n    renderDatasetTable(datasets, isLoading, errMess) {\n        if (isLoading) {\n            return (\n                <Loading />\n            );\n        }\n        else if (errMess) {\n            return (\n                <h4>{errMess}</h4>\n            );\n        }\n        else {\n            return (\n                <Table hover>\n                    {this.tableHead(datasets)}\n                    {this.tableBody(datasets)}\n                </Table>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Col className=\"search-box\" >\n                    <Col md={{ size: 7 }}>\n                        <InputGroup style={{ width: '6' }} >\n                            <Input placeholder=\"Search similar datasets here\" />\n                            <InputGroupAddon addonType=\"append\">\n                                <Button style={{ backgroundColor: '#378CC6' }}>Search</Button>\n                            </InputGroupAddon>\n                        </InputGroup>\n                    </Col>\n                </Col>\n\n                <Col>\n                    <DatasetUpload uploadDataset={this.props.uploadDataset}/>\n                </Col>\n\n                <Col className=\"database\">\n                    {this.renderDatasetTable(this.props.datasetFiles, this.props.isLoading, this.props.errMess)}\n                </Col>\n            </Container>\n        );\n    }\n}\n\nexport default Database;"]},"metadata":{},"sourceType":"module"}