{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pythoncodes\\\\New3\\\\som\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { login } from '../redux/ActionCreators';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: data => {\n    dispatch(login(data));\n  }\n});\n\nconst Login = ({\n  handleChange,\n  ...props\n}) => {\n  _s();\n\n  const paperStyle = {\n    padding: 20,\n    height: '70vh',\n    margin: \"20px auto\"\n  };\n  let myStyle = {\n    color: '#6495ED',\n    fontSize: '48px',\n    fontWeight: 'bold',\n    fontStyle: 'italic'\n  };\n  let root = {\n    '& .MuiTextField-root': {\n      margin: '20ch',\n      width: '25ch'\n    }\n  };\n  let username = {\n    margin: '30px'\n  };\n  let button = {\n    margin: '30px',\n    fontSize: '24px'\n  };\n  const initialValues = {\n    username: '',\n    password: ''\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n    props.login(values);\n  };\n\n  useEffect(() => {\n    if (props.user.loginSuccess) {\n      props.history.replace('/');\n    }\n  }, [props.user.loginSuccess]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: myStyle,\n        children: \" SOM \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: username,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-search\",\n                label: \"username\",\n                name: \"username\",\n                type: \"search\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                id: \"outlined-password-input\",\n                label: \"Password\",\n                name: \"password\",\n                type: \"password\",\n                autoComplete: \"current-password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: button,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: button,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" don't have an account yet?\", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            onClick: () => handleChange(\"event\", 1),\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Login;\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Pythoncodes/New3/som/src/components/login.js"],"names":["React","useEffect","Grid","Paper","Typography","TextField","makeStyles","Button","Link","Formik","Field","Form","ErrorMessage","Yup","login","connect","withRouter","mapStateToProps","state","user","mapDispatchToProps","dispatch","data","Login","handleChange","props","paperStyle","padding","height","margin","myStyle","color","fontSize","fontWeight","fontStyle","root","width","username","button","initialValues","password","onSubmit","values","console","log","loginSuccess","history","replace"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport {Formik,Field,Form,ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport {\r\n  login\r\n} from '../redux/ActionCreators';\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: (data) => { dispatch(login(data)) },\r\n});\r\nconst Login=({handleChange,...props}) => {\r\n    const paperStyle = {padding :20,height:'70vh',margin:\"20px auto\"}\r\n    let myStyle={\r\n        color:'#6495ED',\r\n        fontSize:'48px',\r\n        fontWeight:'bold',\r\n        fontStyle:'italic'\r\n    }\r\n    let root= {\r\n        '& .MuiTextField-root': {\r\n          margin: '20ch',\r\n          width: '25ch',\r\n        }\r\n      }\r\n      let username={\r\n        margin:'30px'\r\n    }\r\n    let button={\r\n        margin:'30px',\r\n        fontSize:'24px',\r\n    }\r\nconst initialValues={\r\n    username:'',\r\n    password:''\r\n\r\n}\r\nconst onSubmit=(values)=>{\r\n    console.log(values)\r\n  props.login(values)\r\n}\r\nuseEffect(()=>{\r\n  if (props.user.loginSuccess){\r\n    props.history.replace('/')\r\n  }\r\n},[props.user.loginSuccess])\r\n    return(\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle}>\r\n            <div style={myStyle}> SOM </div>\r\n            <h3>Sign In</h3>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n                {(props)=>(\r\n                    <Form>\r\n                        <div>\r\n                        <div style={username}>\r\n                        <Field as={TextField} \r\n                            id=\"outlined-search\" \r\n                            label=\"username\" \r\n                            name=\"username\"\r\n\r\n                        \r\n                            type=\"search\" \r\n                            variant=\"outlined\" />\r\n                        </div>\r\n\r\n                        <div>\r\n                        <Field as={TextField}\r\n                            id=\"outlined-password-input\"\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            variant=\"outlined\"/>\r\n                        </div>\r\n\r\n                        </div>\r\n                      <div style={button}>\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                        Sign In\r\n                      </Button>\r\n                      </div>\r\n                    </Form>\r\n            )} \r\n\r\n\r\n            </Formik>\r\n\r\n            <div style={button}>\r\n\r\n            \r\n            <Typography> don't have an account yet?\r\n                <Link href=\"#\" onClick={()=>handleChange(\"event\",1)}>\r\n                    Sign up\r\n                </Link>\r\n            </Typography>\r\n            </div>\r\n\r\n            </Paper>\r\n            \r\n          \r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n"]},"metadata":{},"sourceType":"module"}